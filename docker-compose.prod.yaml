volumes:
    db-data:
    back_dir:
    ssl-certificates:

networks:
    traefik-public:
        external: true


services:
    traefik:
        image: traefik:3.0
        ports:
        - 80:80
        - 443:443
        restart: always
        labels:
            - traefik.enable=true
            #
            - traefik.docker.network=traefik-public
            #
            # - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
            # - traefik.http.routers.traefik-dashboard-http.entrypoints=http
            # - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.${DOMAIN}`)
            
            # # SSL
            # - traefik.http.routers.traefik-dashboard-https.entrypoints=https
            # - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.${DOMAIN?Variable not set}`)
            # - traefik.http.routers.traefik-dashboard-https.tls=true
            # - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le
            # - traefik.http.routers.traefik-dashboard-https.service=api@internal
            # - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
            # - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

            # # AUTH
            # - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect
            # - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
            # - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ssl-certificates:/certificates  # ssl volume
        command:
            - --providers.docker
            - --providers.docker.exposedbydefault=false
            #
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443

            # SSL
            # - --certificatesresolvers.le.acme.email=${EMAIL?Variable not set}
            # - --certificatesresolvers.le.acme.storage=/certificates/acme.json
            # - --certificatesresolvers.le.acme.tlschallenge=true
            #

            - --accesslog
            - --log
            - --api
        networks:
            - traefik-public
            
    db:
        image: postgres:16.0
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB_NAME}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
           - db-data:/var/lib/postgresql/data
        labels:
             - traefik.enable=true

    backend:
        image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
        build:
            context: ./backend
        restart: always
        environment:
            - INNER_HOST=${INNER_HOST}
            - ENVIRONMENT=${ENVIRONMENT}
            - STACK_NAME=${STACK_NAME}
            #
            - SECRET_KEY=${SECRET_KEY}
            #
            - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
            - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
            #
            - DATABASE_URL=${DATABASE_PROTOCOL}://db:5432/${POSTGRES_DB_NAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            #
            - WEB_CONCURRENCY=1
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - back_dir:/backend
        labels:
            - traefik.enable=true
            - traefik.http.routers.${STACK_NAME}.rule=Host(`fastapi.${DOMAIN}`)
            - traefik.http.routers.${STACK_NAME}-backend-http.entrypoints=http

            - traefik.docker.network=traefik-public
            - traefik.constraint-label=traefik-public

            # # SSL
            # - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.middlewares=https-redirect

        networks:
            - traefik-public
